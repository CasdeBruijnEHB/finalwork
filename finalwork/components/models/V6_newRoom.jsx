/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 finalwork/public/V6_newRoom.glb --transform
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useLoader } from '@react-three/fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import { DRACOLoader } from 'three/addons/loaders/DRACOLoader.js'
import { TextureLoader } from 'three'
import * as THREE from 'three'
import { MeshBasicMaterial } from 'three'

export function Model60s({ props, imageData, genreData, dominantColor }) {
  //THIS IS THE ACTUAL MODEL - Here we add textures to the model and generate the mesh

  //First load in the mesh.
  const dracoLoader = new DRACOLoader()
  dracoLoader.setDecoderPath('https://www.gstatic.com/draco/v1/decoders/')
  const gltf = useLoader(
    GLTFLoader,
    '/glbs/V6_newRoom-transformed.glb',
    (loader) => {
      loader.setDRACOLoader(dracoLoader)
    },
  )
  const { nodes, materials } = gltf

  //Next Load in the imagedata and use them as textures
  //console.log('imagedata: ', imageData)
  const texture = useLoader(TextureLoader, imageData[3].image)

  //Next load in the genredata and use it to add certain meshes
  //console.log('genredata:', genreData)

  //Get the dominant color and set it in the mesh
  console.log('dominant colordata:', dominantColor)
  const color = new THREE.Color(1, 0, 0) // RGB values for red
  const material = new MeshBasicMaterial({ color })

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.HOUSEHouse002.geometry}
        material={material}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.01}
      />
      <mesh
        geometry={nodes.mat.geometry}
        material={materials['Material.020']}
        position={[0.01, 0.03, -0.07]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.06, 0.06, 0.01]}
      />
      <group
        position={[-0.01, 0.05, 0.16]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.14, 0.04, 0.04]}
      >
        <mesh
          geometry={nodes.kleinKastje.geometry}
          material={materials.kastje_mainsurface}
        />
        <mesh
          geometry={nodes.kleinKastje_1.geometry}
          material={materials.kastje_randjesLade}
        />
        <mesh
          geometry={nodes.kleinKastje_2.geometry}
          material={materials.kastje_laden}
        />
        <mesh
          geometry={nodes.kleinKastje_3.geometry}
          material={materials.lade_handvat}
        />
      </group>
      <mesh
        geometry={nodes.table.geometry}
        material={materials.lambert2}
        position={[-0.1, 0.08, -0.07]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.01, 0.01, 0.04]}
      />
      <group
        position={[-0.07, 0.07, -0.14]}
        rotation={[1.3, 0.23, 2.33]}
        scale={[0.01, 0.01, 0.02]}
      >
        <mesh geometry={nodes.Mesh004.geometry} material={materials.lambert2} />
        <mesh geometry={nodes.Mesh004_1.geometry} material={materials.Zitje} />
      </group>
      <group
        position={[-0.16, 0.11, -0.02]}
        rotation={[Math.PI / 2, 0, 1.11]}
        scale={[0.09, 0.07, 0.17]}
      >
        <mesh
          geometry={nodes.bigcloset.geometry}
          material={materials.lambert2}
        />
        <mesh
          geometry={nodes.bigcloset_1.geometry}
          material={materials.wooden}
        />
      </group>
      <mesh
        geometry={nodes.recordplayer.geometry}
        material={materials.lambert28}
        position={[-0.05, 0.07, 0.15]}
        scale={0}
      />
      <group
        position={[0.13, 0.03, 0.07]}
        rotation={[-Math.PI / 2, 0, 1.58]}
        scale={0.01}
      >
        <mesh
          geometry={nodes.bed_1.geometry}
          material={materials.Pillow_Blanket}
        />
        <mesh
          geometry={nodes.bed_2.geometry}
          material={materials['material.001']}
        />
      </group>
      <mesh
        geometry={nodes.Banker_Lamp_1_LP_M_Lamp_Bank_0.geometry}
        material={materials.M_Lamp_Bank}
        position={[0.03, 0.07, 0.15]}
        rotation={[-Math.PI / 2, 0, 0.91]}
        scale={0.07}
      />
      <mesh
        geometry={nodes.Box_Box_Material_0.geometry}
        material={materials.Box_Material}
        position={[-0.12, 0.2, 0.07]}
        rotation={[-Math.PI / 2, 0, -0.66]}
        scale={0.05}
      />

      <mesh
        geometry={nodes.Plaat1.geometry}
        material={materials.Vinyl1Surface}
        position={[0.01, 0.07, 0.15]}
        rotation={[Math.PI / 2, 0, -2.82]}
        scale={[0.03, 0.03, 0.0005]}
      >
        <meshStandardMaterial
          map={useLoader(TextureLoader, imageData[0].image)}
        />
      </mesh>
      <mesh
        geometry={nodes.Plaat2.geometry}
        material={materials.Vinyl1Surface}
        position={[0, 0.07, 0.16]}
        rotation={[Math.PI / 2, -0.05, 3.04]}
        scale={[0.03, 0.03, 0.0005]}
      >
        <meshStandardMaterial
          map={useLoader(TextureLoader, imageData[1].image)}
        />
      </mesh>
      <mesh
        geometry={nodes.Plaat3.geometry}
        material={materials.Vinyl1Surface}
        position={[-0.01, 0.07, 0.15]}
        rotation={[Math.PI / 2, -0.03, 3.06]}
        scale={[0.03, 0.03, 0.0005]}
      >
        <meshStandardMaterial
          map={useLoader(TextureLoader, imageData[2].image)}
        />
      </mesh>
      <mesh
        geometry={nodes.Plaat4.geometry}
        material={materials.Vinyl1Surface}
        position={[-0.02, 0.07, 0.15]}
        rotation={[Math.PI / 2, 0.02, -1.55]}
        scale={[0.03, 0.03, 0.0005]}
      >
        <meshStandardMaterial
          map={useLoader(TextureLoader, imageData[3].image)}
        />
      </mesh>
      <mesh
        geometry={nodes.Plaat5.geometry}
        material={materials.Vinyl5Surface}
        position={[-0.07, 0.07, 0.15]}
        rotation={[Math.PI / 2, 0, 3.11]}
        scale={[0.03, 0.03, 0.0005]}
      >
        <meshStandardMaterial
          map={useLoader(TextureLoader, imageData[4].image)}
        />
      </mesh>

      <group
        position={[-0.17, 0.19, -0.14]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.01, 0.04, 0.06]}
      >
        <mesh
          geometry={nodes.kaderposter.geometry}
          material={materials.lade_handvat}
        />
        <mesh
          geometry={nodes.kaderposter_1.geometry}
          material={materials.lade_handvat}
        />
      </group>
      <mesh
        geometry={nodes.Cube.geometry}
        material={materials.poster3}
        position={[0.12, 0.17, 0.18]}
        rotation={[Math.PI * 5, 0, 0]}
        scale={[0.02, 0.02, 0.0005]}
      >
        <meshStandardMaterial
          map={useLoader(TextureLoader, imageData[0].image)}
        />
      </mesh>
      <mesh
        geometry={nodes.Cube.geometry}
        material={materials.poster3}
        position={[0.05, 0.2, 0.18]}
        rotation={[Math.PI * 5, 0, 0]}
        scale={[0.02, 0.02, 0.0005]}
      >
        <meshStandardMaterial
          map={useLoader(TextureLoader, imageData[1].image)}
        />
      </mesh>
      <mesh
        geometry={nodes.Cube.geometry}
        material={materials.poster3}
        position={[0.07, 0.14, 0.16]}
        rotation={[Math.PI * 5, 0, 0]}
        scale={[0.02, 0.02, 0.0005]}
      >
        <meshStandardMaterial
          map={useLoader(TextureLoader, imageData[2].image)}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('/glbs/V6_newRoom-transformed.glb')
