/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/glbs/HH_ELEC/shoes.glb --transform
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import { DRACOLoader } from 'three/addons/loaders/DRACOLoader.js'
import { useLoader } from '@react-three/fiber'

export function Shoes({ props, onClick, imagedata, genredata, colorData }) {
  //First load in the mesh.
  const dracoLoader = new DRACOLoader()
  dracoLoader.setDecoderPath('https://www.gstatic.com/draco/v1/decoders/')
  const gltf = useLoader(
    GLTFLoader,
    '/glbs/HH_ELEC/shoes-transformed.glb',
    (loader) => {
      loader.setDRACOLoader(dracoLoader)
    },
  )
  const { nodes, materials, animations } = gltf

  function CircleMesh() {
    return (
      <mesh position={[0, 3, 3]} rotation={[-0.5, 1, 0]} scale={[1, 1, 1]}>
        <circleGeometry args={[1, 32]} /> {/* Radius: 1, Segments: 32 */}
        <meshBasicMaterial color="white" />
      </mesh>
    )
  }

  return (
    <group
      onClick={() => onClick('genre_shoes')}
      name="genre_shoes"
      {...props}
      dispose={null}
      position={[42, -17.5, 4]}
      rotation={[0, 2, 0]}
      scale={2.6}
    >
    
      <group
        position={[-0.6, 1.28, -0.15]}
        rotation={[Math.PI / 2, 0, 3.01]}
        scale={0.15}
      >
        <mesh geometry={nodes.Laces_L.geometry} material={colorData[1]} />
        <mesh geometry={nodes.Shoe_L.geometry} material={colorData[5]}></mesh>
        <mesh geometry={nodes.Sole_L.geometry} material={colorData[0]} />
      </group>
      <group
        position={[0.19, -0.39, 0.11]}
        rotation={[Math.PI / 2, 0, -0.1]}
        scale={0.15}
      >
        <mesh
          geometry={nodes.Laces_R.geometry}
          material={colorData[1]}
          position={[4.98, 0, -11.19]}
          rotation={[0, 0, -0.15]}
        />
        <mesh
          geometry={nodes.Shoe_R.geometry}
          material={colorData[5]}
          position={[4.98, 0, -11.19]}
          rotation={[0, 0, -0.15]}
        />
        <mesh
          geometry={nodes.Sole_R.geometry}
          material={colorData[0]}
          position={[4.98, 0, -11.19]}
          rotation={[0, 0, -0.15]}
        />
      </group>
      <mesh
        geometry={nodes.BoxBottom.geometry}
        material={colorData[3]}
        position={[0.18, -0.39, 0.02]}
        rotation={[Math.PI / 2, 0, Math.PI / 2]}
        scale={0.14}
      />
      <mesh
        geometry={nodes.BoxTop.geometry}
        material={colorData[2]}
        position={[0.18, -0.39, 0.02]}
        rotation={[Math.PI / 2, 0, 1.57]}
        scale={0.14}
      />
    </group>
  )
}

useGLTF.preload('/glbs/HH_ELEC/shoes-transformed.glb')
